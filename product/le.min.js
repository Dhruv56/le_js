/*
 Copyright 2013 Logentries.
 Please view license at https://raw.github.com/logentries/le_js/master/LICENSE
*/
'use strict';var LE=function(d){function g(b){var t=(Math.random()+Math.PI).toString(36).substring(2,10),e=b.trace,f=b.page_info,m=b.token,g=b.print,u=b.ssl,h=[],k=!1,n=!1;if(b.catchall){var p=d.onerror;d.onerror=function(a,c,q){r({error:a,line:q,url:c});p&&p(a,c,q)}}var v=function(){var a=d.screen||{width:"unknown",height:"unknown"};return{name:(d.navigator||{userAgent:"unknown"}).userAgent,screenWidth:a.width,screenHeight:a.height}},l=function(a){if("object"!==typeof a&&!Array.isArray(a)||null===
a)return"undefined"===typeof a?"undefined":null===a?"null":a;for(var c in a)a[c]=l(a[c]);return a},w=function(){var a=null,a=Array.prototype.slice.call(arguments);if(0===a.length)throw Error("No arguments!");return a=1===a.length?a[0]:l(a).join(" ")},r=function(a){var c={event:w.apply(this,arguments)};"never"===f||"per-entry"!==f&&n||(c.agent=v(),n=!0);e&&(c.trace=t);return{level:function(a){g&&console[a.toLowerCase()].call(console,c);c.level=a;return{send:function(){var a=JSON.stringify(l(c));k?
h.push(a):s(m,a)}}}}};this.log=r;var s=function(a,c){k=!0;var b=function(){d.ActiveXObject&&(d.XMLHttpRequest=function(){return new ActiveXObject("Microsoft.XMLHTTP")});return new XMLHttpRequest}();b.onreadystatechange=function(){4===b.readyState&&(400<=b.status?(console.error("Couldn't submit events."),410===b.status&&console.warn("This version of le_js is no longer supported!")):(301===b.status&&console.warn("This version of le_js is deprecated! Consider upgrading."),0<h.length?s(a,h.shift()):k=
!1))};b.open("POST",(u?"https://":"http://")+"js.logentries.com/v1/logs/"+m,!0);b.setRequestHeader("X-Requested-With","XMLHttpRequest");b.setRequestHeader("Content-type","text/json");b.send(c)}}var f,e=function(){if(f)return f.log.apply(this,arguments);throw Error("You must call LE.init(...) first.");};return{init:function(b){var d={ssl:!0,catchall:!1,trace:!1,page_info:"never",print:!1};if("object"===typeof b)for(var e in b)d[e]=b[e];else if("string"===typeof b)d.token=b;else throw Error("Invalid parameters for init()");
if(void 0===d.token)throw Error("Token not present.");f=new g(d);return!0},log:function(){e.apply(this,arguments).level("LOG").send()},warn:function(){e.apply(this,arguments).level("WARN").send()},error:function(){e.apply(this,arguments).level("ERROR").send()},info:function(){e.apply(this,arguments).level("INFO").send()}}}(this);